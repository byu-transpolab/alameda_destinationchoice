[
["index.html", "Estimating Park Choice and Access in Alameda County, California, using Passive Origin-Destination Data. 1 Introduction", " Estimating Park Choice and Access in Alameda County, California, using Passive Origin-Destination Data. Gregory Macfarlane Brigham Young Universitygregmacfarlane@byu.edu Teresa Tapia teresa.tapia@streetlightdata.com Carole Turley-Voulgaris Harvard Universitycat@example.com 2020-11-16 Abstract Parks provide important benefits to those who live near them, in the form of improved property values, health outcomes, etc.; nevertheless, measuring and understanding who lives near a park is an open research question. In particular, it is not well understood which park individuals will choose to use when given a choice among a set of nearby parks of varying sizes and at varying distances from their home. In this paper we present a park activity location choice model estimated from a passive origin-destination dataset — supplied by StreetLight Data, Inc. — representing trips to parks and green spaces in Alameda County, California. The estimated model parameters reveal heterogeneous preferences for park size and willingness-to-travel across block-group level socioeconomic segmentation: Specifically, high-income block groups appear more positively attracted to larger parks, and block groups with a high proportion of ethnic minority individuals are more likely to select nearby parks. The findings have importance for understanding recreational access among different populations, and the methodology more generally supplies a potential template for using passive data products within travel modeling. 1 Introduction Parks and other green spaces generate immense value for the public who are able to access them. The City Parks Alliance (2019) categorizes the observed benefits of urban parks as encouraging active lifestyles (Bancroft et al. 2015), contributing to local economies, aiding in stormwater management and flood mitigation, improving local air quality, increasing community engagement (Madzia et al. 2018), and enhancing public equity. Nevertheless, understanding and quantifying these benefits depends in many cases on identifying who lives near the parks and is therefore able to access them. Many previous studies (e.g., Richardson et al. 2012) rely on comparison of total greenspace across metropolitan areas; this methodology may not adequately control for city-level fixed effects and it may ignore the potentially inequitable distribution of park space within a region. Studies focusing on access within metropolitan areas typically assume that people living within a certain distance or travel time threshold have access to a park, or examine the quantity of park space within one’s own arbitrarily defined “neighborhood” (Mitchell and Popham 2008, Stark2014). But these methods do not account for the fact that some people will travel to other parks to perform recreational activities. A more holistic measure that continuously measures access across multiple preference dimensions is desirable. An appealing solution would be to examine and model the activity location choices of park users. Such a model would help researchers understand how individuals of different backgrounds and preferences value different park amenities. Further, the logsums of a location choice model provide a continuous measure of accessibility that explicitly accounts for such variation (Jong et al. 2007). Unfortunately, park choice models of this form are rare in the literature. Travel demand models built for infrastructure forecasting are a common way to generate such accessibility logsums, but these models group many different kinds of social and recreational trips together (National Academies of Sciences Engineering and Medicine 2012). Further, the attraction term for such trip purposes is commonly a function of the retail or service employment or the number of households at the destination; a typical park or green space has neither employees nor residents. Finally, many regional household travel surveys are oriented towards an average weekday travel pattern, and many park trips occur irregularly or on weekends. In this paper we present a park destination choice model where individuals living in Alameda County, California choose among parks in the same county. The individuals are constructed from passive data that was derived from mobile devices and processed using algorithms developed by StreetLight Data, Inc. The origin location points are inferred residence block groups for unique devices and the destination points are geofenced polygons representing green and open spaces. The individuals’ choice of park location is conditioned on the distance from the block group to the parks in the choice set as well as the size of each park; market segmentation allows for heterogeneous responses between ethnic groups and income strata. The paper proceeds in the following manner: A discussion of prior attempts to study park choice and employ passive origin-destination data in the literature is given directly. The Methodology section presents the data gathering and cleaning efforts as well as the econometric location choice model. The Results section presents the estimated model coefficients and a discussion of the findings, as well as a model validation exercise. After presenting limitations and associated avenues for future research, a final Conclusions section outlines the contributions of this study for recreational trip modeling and location choice modeling more generally. References "],
["literature.html", " 2 Literature 2.1 Passive Location Data", " 2 Literature Understanding who has access to parks is a long-standing question across multiple scientific disciplines. Researchers specializing in recreation management, public health, urban planning, ecology, and civil engineering have all played a role in shaping our collective understanding of park design, access, and use. A complete review of all of these fields is not warranted for the scope of this paper, but some recent findings are worth discussion. A popular measure of park accessibility is the Trust for Public Land’s “ParkScore” statistic (Trust for Public Land 2019). ParkScore considers the share of the population that resides within a 10-minute walk of a green space using a sophisticated network routing algorithm, in combination with the total city green space, investment, and amenities weighted against the socioeconomic characteristics of the population outside of the 10-minute walk threshold. The resulting score is a convenient quantitative tool in estimating the relative quality of green space access across cities (Rigolon, Browning, and Jennings 2018). It may be less useful at identifying the comparative quality of access within a city, particularly as more than 95% of residents in many large metropolitan areas like San Francisco and New York live within the binary 10-minute walk threshold. The Centers for Disease Control and Prevention (CDC) has developed an “Accessibility to Parks Indicator” along similar lines (Ussery et al. 2016), calculating the share of the population living within a half-mile of a park for each county in the U.S. There is recognition that park access should in some way be linked with park use. After all, a park that has many visitors must by definition be accessible to those visitors. McCormack et al. (2010) provide a comprehensive review of this literature; it is sufficient here to note that most studies find a complicated interplay between park size, maintenance, facilities, and travel distance. Many of these attributes are incorporated into ParkIndex (Kaczynski et al. 2016), which estimates the resident park use potential within \\(100 m^2\\) grid cells, based on a household park use survey in Kansas City. From a transportation engineering perspective, the park use potential measured by ParkIndex is not dissimilar from a park trip production potential. Along these lines, the question of park use is a destination choice problem, where trip makers consider which park is most attractive to accomplish their recreation activity. The Institute of Transportation Engineers (ITE) Trip Generation Manual (2017) contains trip attraction rates for public parks that use as attraction terms the park acreage, number of picnic tables, employees, and other variables. As with many land uses in Trip Generation, the provided trip generation rates are based on a limited number of observational samples and may not represent large-sample behavior (Millard-Ball 2015). Moreover, regression-based attraction rates isolated from trip production and travel behavior ignore the geographical and behavioral contexts in which people actually make trips to parks (Barnard and Brindle 1987): Though more people may come to larger parks, a park cannot attract more people simply by becoming bigger. There are limited examples of researchers using a destination choice model to predict recreation attractions. Kinnell et al. (2006) apply a choice model to a survey of park visitors in New Jersey, and estimate the relative attractiveness of park attributes including playgrounds, picnic areas, and park acreage weighed against the travel disutility and the relative crime rate at the destination. In a similar study, Meyerhoff, Dehnhardt, and Hartje (2010) model the urban swimming location choice for a surveyed sample. In both studies, the researchers were attempting to ascertain which attributes of a recreation generated the most positive utility, and therefore which attributes should be prioritized for improvement. These studies have not to our knowledge been previously referenced in discussions of park accessibility. 2.1 Passive Location Data The advent of large-scale mobile networks and the seemingly perpetual association of unique devices with unique users has given researchers a new opportunity to observe the movements and activity location patterns for large subsets of the population (Naboulsi et al. 2016). Such passively collected movement data — sometimes referred to as “Big Data” — is passively collected as a by-product of other systems including cellular call data records (e.g., Bolla and Davoli 2000; Calabrese et al. 2011), probe GPS data (Huang and Levinson 2015), and more recently Location Based Services (LBS) (Roll 2019; Komanduri et al. 2017). LBS use a network of mobile applications that obtain the users’ physical location. A variety of commercial vendors repackage, clean, and scale these data to population or traffic targets and sell origin-destination matrices to researchers and practitioners at relatively low prices. Monz et al. (2019), for example, demonstrate how passive device data can be used to accurately estimate trips to natural recreation areas. Passive origin-destination matrices are beginning to inform trip distribution model development more directly as well. Kressner (2017) proposes one methodology, where passive origin-destination matrices serve as a probabilistic sampling frame for a simulated trip destination choice. Bernardin et al. (2018) employ a passive origin-destination matrix as a shadow price reference in an activity-based location choice model, iteratively adjusting the parameters of the choice utilities to minimize the observed error between the matrix and the modeled predictions. A similar method developed by Zhu and Ye (2018) uses the passive dataset directly, sampling 10,000 random trips from GPS traces of taxi trips in Shanghai and estimating a destination choice model. Employing the passive data set in this way provides the authors an opportunity to examine the choices of a large sample of a small population (taxi passengers) as well as sufficient data to estimate a “constants-rich” destination choice model with uniquely estimated coefficients for each origin-destination pair. The Zhu and Ye methodology suggests that a similar approach should apply in other contexts, including park choice. References "],
["methodology.html", " 3 Methodology 3.1 Data 3.2 Model", " 3 Methodology We constructed a dataset on which to estimate park activity location choices for a sample of observed trips in Alameda County, California. Alameda County is one of the seven counties that constitutes the San Francisco Bay Area metropolitan region in California. Alameda is the seventh most populous county in California with a population of 1.5 million (U.S. Census Bureau 2019), and has 14 incorporated cities and several unincorporated communities. It is an economically and ethnically diverse county and hence it was an attractive area to use for this study. The racial makeup of Alameda County was (49.7%) White, (11.2%) African American, (1.0%) Native American, (38.7%) Asian, (1.0%) Pacific Islander, and (22.4% Hispanic or Latino (of any race). Alameda County has a diverse set of parks, ranging from local small community parks, urban and transit-accessible parks like the Lake Merritt Recreational area, accessible coastal access, and suburban recreational areas like Lake Chabot. 3.1 Data We constructed an analysis dataset from a publicly-available parks polygons layer, a commercially acquired passive device origin-destination table representing trips between the parks and home block groups, and American Community Survey data for the home block groups. We obtained a polygons shapefile layer representing open spaces in Alameda County, California from the California Protected Areas Database (GreenInfo Network 2019). This dataset was selected because it included multiple different types of open space including local and state parks, traditional green spaces as well as wildlife refuges and other facilities that can be used for recreation. We removed facilities that did not allow open access to the public (such as the Oakland Zoo) and facilities whose boundaries conflated with freeway right-of-way – this prevents trips through the park from being conflated with park trips in the passive origin-destination data. not_parks &lt;- c(&quot;3455&quot;, &quot;15886&quot;, &quot;13243&quot;) parks &lt;- st_read(here(&quot;data/bayarea_parks.geojson&quot;), quiet = TRUE) %&gt;% filter(COUNTY == &quot;Alameda&quot;) %&gt;% transmute( id = as.character(UNIT_ID), name = UNIT_NAME, access = factor(ACCESS_TYP, levels = c(&quot;Open Access&quot;, &quot;No Public Access&quot;, &quot;Restricted Access&quot;)), acres = ACRES, type = DES_TP) %&gt;% filter(!id %in% not_parks) %&gt;% filter(access == &quot;Open Access&quot;) %&gt;% select(id, access, acres, type) %&gt;% st_transform(this_crs) From this initial parks polygons dataset, we obtained park attribute information through OpenStreetMap (OSM) using the osmdata package for R (Padgham et al. 2017). Three attribute elements are considered in this analysis. First, we identify playgrounds using OSM facilities given a leisure = playground tag. The tagged facilities can be either polygon or point objects; in the former case we use the polygon centroid to determine the location of the playground. playground_osm &lt;- opq(bb) %&gt;% # specify boundary for query add_osm_feature(key = &quot;leisure&quot;, value = &quot;playground&quot;) %&gt;% # specify which kinds of data we want osmdata_sf() %&gt;% # get a list of sf data frames for these tags trim_osmdata(bb, exclude = TRUE) playgrounds &lt;- rbind( # convert polygons to centroids playground_osm$osm_polygons %&gt;% st_transform(this_crs) %&gt;% st_centroid() %&gt;% select(osm_id), # get points playground_osm$osm_points %&gt;% st_transform(this_crs) %&gt;% select(osm_id) # no multipolygons or polylines that need to be included ) %&gt;% mutate(playground = TRUE) Second, we consider sport fields of various kinds identified with the OSM leisure = pitch tag. This tag has an additional attribute describing the sport the field is designed for, which we retain in a consolidated manner. Soccer and American football fields are considered in a single category, and baseball and softball fields are combined as well. Basketball, tennis, and volleyball courts are kept as distinct categories, with all other sport-specific fields combined into a single “other”. Golf courses are discarded. As with playgrounds, polygon field and court objects are converted into points at the polygon centroid. pitches_osm &lt;- opq(bb) %&gt;% # specify boundary for query add_osm_feature(key = &quot;leisure&quot;, value = &quot;pitch&quot;) %&gt;% osmdata_sf() %&gt;% trim_osmdata(bb, exclude = TRUE) pitches &lt;- rbind( # convert polygons to centroids pitches_osm$osm_polygons %&gt;% st_transform(this_crs) %&gt;% st_centroid() %&gt;% select(osm_id, sport), # get points pitches_osm$osm_points %&gt;% st_transform(this_crs) %&gt;% select(osm_id, sport) # no multipolygons or polylines that need to be included ) %&gt;% filter(sport != &quot;golf&quot;) %&gt;% mutate( sport = case_when( grepl(&quot;football&quot;, sport) | grepl(&quot;soccer&quot;, sport) ~ &quot;football / soccer&quot;, grepl(&quot;baseball&quot;, sport) | grepl(&quot;softball&quot;, sport) ~ &quot;baseball&quot;, grepl(&quot;basketball&quot;, sport) ~ &quot;basketball&quot;, grepl(&quot;tennis&quot;, sport) ~ &quot;tennis&quot;, grepl(&quot;volleyball&quot;, sport) ~ &quot;volleyball&quot;, TRUE ~ &quot;other&quot; ) ) Finally, we identified trails and footpaths using the path, cycleway, and footway values of the highway tag. A visual inspection of the resulting data revealed that the large preponderance of sidewalks and cycling trails within parks in Alameda County are identified properly with these variables. Trails are represented in OSM as polylines, or as polygons if they form a complete circle. In the latter case, we converted the polygon boundary into an explicit polyline object. trails_osm &lt;- opq(bb) %&gt;% # specify boundary for query add_osm_feature(key = &quot;highway&quot;, value = c(&quot;footway&quot;, &quot;cycleway&quot;, &quot;path&quot;)) %&gt;% osmdata_sf() %&gt;% trim_osmdata(bb, exclude = FALSE) trails &lt;- rbind( # points are nodes, so we can skip them. # lines trails_osm$osm_lines %&gt;% st_transform(this_crs) %&gt;% select(osm_id, bicycle, foot, horse), # circular paths get converted to polygons, so we need to # turn them back into lines. trails_osm$osm_polygons %&gt;% st_transform(this_crs) %&gt;% st_boundary() %&gt;% select(osm_id, bicycle, foot, horse) ) %&gt;% mutate(length = st_length(.)) It is possible for each of these facilities to exist outside the context of a public park. For example, many private apartment complexes have playgrounds and high schools will have sports facilities that are not necessarily open to the general public. We spatially matched the OSM amenities data and retained only those facilities that intersected with the CPAD open spaces database identified earlier. attributed_parks &lt;- parks %&gt;% # compute yeo-johnson transformation on acres mutate(yj_acres = VGAM::yeo.johnson(acres, lambda = 0)) %&gt;% # determine if a playground point is inside the park polygon boundary st_join(playgrounds %&gt;% select(playground), st_intersects) %&gt;% # a park with multiple playgrounds will join multiple times, so we need to # summarize them back down. group_by(id) %&gt;% slice(1) %&gt;% ungroup() %&gt;% mutate(playground = ifelse(is.na(playground), F, playground)) %&gt;% # determine if the pitch points are inside the park polygon boundaries st_join(pitches %&gt;% select(sport)) %&gt;% # multiple pitches in a park result in repeated rows. group_by(id) %&gt;% slice(1) %&gt;% ungroup() %&gt;% mutate(pitch = ifelse(is.na(sport), F, T)) %&gt;% select(-sport) %&gt;% # determine if the trails are inside the park polygon boundaries st_join(trails %&gt;% select(trail = osm_id), st_intersects) %&gt;% # multiple pitches in a park result in repeated rows. group_by(id) %&gt;% slice(1) %&gt;% ungroup() %&gt;% mutate(trail = ifelse(is.na(trail), F, T)) if(knitr::is_latex_output()) { alameda_back &lt;- get_googlemap(c(lon = -122.1300334, lat = 37.69427), zoom = 9, maptype = &quot;terrain&quot;, color = &quot;bw&quot;) plot(st_transform(parks, 3857)[,&quot;access&quot;], bgMap = alameda_back) } else { leaflet() %&gt;% addProviderTiles(providers$Esri.WorldGrayCanvas) %&gt;% addPolygons(data = parks %&gt;% st_transform(4326), group = &quot;Parks&quot;, color = &quot;green&quot;) %&gt;% addCircleMarkers(data = playgrounds %&gt;% st_transform(4326), group = &quot;Playgrounds&quot;, color = &quot;blue&quot;, radius = 2) %&gt;% addCircleMarkers(data = pitches %&gt;% st_transform(4326), group = &quot;Sport Fields&quot;, color = &quot;red&quot;, radius = 2) %&gt;% addPolylines(data = trails %&gt;% st_transform(4326), group = &quot;Trails&quot;, color = &quot;black&quot;) %&gt;% addLayersControl(overlayGroups = c(&quot;Parks&quot;, &quot;Playgrounds&quot;, &quot;Sport Fields&quot;, &quot;Trails&quot;)) } Figure 3.1: Location of parks in Alameda County. We provided the park boundaries layer to a commercial firm, StreetLight Data Inc., which develops and resells origin-destination matrices derived from passive device location data. The provider employs a proprietary data processing engine (called Route Science) to algorithmically transform observed device location data points (the provider uses in-vehicle GPS units and mobile device LBS) over time into contextualized, normalized, and aggregated travel patterns. From these travel patterns, the Route Science processing algorithms infer likely home Census block group locations for composite groups of people and converts raw location data points into trip origin and destination points (Pan et al. 2006; Friedrich et al. 2010). park_flows &lt;- read_csv(here(&quot;data/Master_BlockGroups_Final071519.csv&quot;), col_types = cols()) %&gt;% # need to make block group id properly formatted. transmute( park = as.character(`Zone Name`), home = paste0(&quot;0&quot;, round(`Block Group ID`)), county = substr(home, 0, 5), attractions = `Zone Traffic (StL Index)`, d_share = `Percent by Home Location` ) %&gt;% # only keep bgs in the area filter(county %in% c(&quot;06001&quot;)) %&gt;% # and only keep parks that we are looking at filter(park %in% parks$id) %&gt;% mutate(flow = attractions * d_share) %&gt;% group_by(home) %&gt;% mutate( productions = sum(flow), o_share = flow / productions ) For each park polygon, the firm returned a population-weighted estimate of how many devices were observed by home location block group over several months in the period between May 2018 and October 2018. We transformed this table such that it represented the weighted unique devices traveling between block groups and parks. We discarded home location block groups outside of Alameda County; the imputed home locations can be far away from the study area for a small amount of trips and are unlikely to represent common or repeated park activities. attributed_parks &lt;- attributed_parks %&gt;% group_by(type) %&gt;% left_join(park_flows %&gt;% group_by(park) %&gt;% slice(1) %&gt;% select(park, attractions), by = c(&quot;id&quot; = &quot;park&quot;)) %&gt;% mutate(attractions = ifelse(is.na(attractions), 0, attractions)) Table presents descriptive statistics on the 500 parks assembled for this study, grouped according to the park type as defined on CPAD. A little more than half of the parks have identified paths, while around 40% of the identified parks have playgrounds and sport fields. datasummary_balance( ~ type, data = attributed_parks %&gt;% select(Access = access, Acres = acres, type, Playground = playground, `Sport Field` = pitch, Trail = trail, `Mobile Devices` =attractions), dinm = FALSE, caption = &quot;Park Summary Statistics&quot;, booktabs = TRUE) Table 3.1: Park Summary Statistics Local Park (N=441) Local Recreation Area (N=57) State Recreation Area (N=2) Mean Std. Dev. Mean Std. Dev. Mean Std. Dev. Acres 59.8 370.5 115.2 509.6 421.0 271.7 Mobile Devices 1450.0 6685.4 2749.5 6250.4 80.5 113.8 N % N % N % Access Open Access 441 88.2 57 11.4 2 0.4 No Public Access 0 0.0 0 0.0 0 0.0 Restricted Access 0 0.0 0 0.0 0 0.0 Playground FALSE 225 45.0 42 8.4 2 0.4 TRUE 216 43.2 15 3.0 0 0.0 Sport Field FALSE 277 55.4 37 7.4 2 0.4 TRUE 164 32.8 20 4.0 0 0.0 Trail FALSE 156 31.2 22 4.4 0 0.0 TRUE 285 57.0 35 7.0 2 0.4 In order to understand the demographic makeup of the home block groups and potentially the characteristics of the people who make each trip, we obtained 2013-2017 five-year data aggregations from the American Community Survey using the tidycensus (Walker 2019) interface to the Census API for several key demographic and built environment variables: the share of individuals by ethnic group, the share of households by income level, household median income, and the housing unit density. An important attribute of the choice model is the distance from the home block group to the park boundary. Because we have no information on where in the block group a home is actually located, we use the population-weighted block group centroid published by the Census Bureau as the location for all homes in the block group. We then measured the network-based distance between the park and the home block group centroid using a walk network derived from OpenStreetMap using the networkx package for Python (Hagberg, Schult, and Swart 2008), variables &lt;- c( &quot;population&quot; = &quot;B25008_001&quot;, # TOTAL POPULATION IN OCCUPIED HOUSING UNITS BY TENURE &quot;housing_units&quot; = &quot;B25001_001&quot;, # HOUSING UNITS &quot;households&quot; = &quot;B19001_001&quot;, #HOUSEHOLD INCOME IN THE PAST 12 MONTHS (IN 2017 INFLATION-ADJUSTED DOLLARS) #Estimate!!Total!!Female!!Worked in the past 12 months!!Usually worked 35 or more hours per week # RACE &quot;black&quot; = &quot;B02001_003&quot;, &quot;asian&quot; = &quot;B02001_005&quot;, &quot;pacific&quot; = &quot;B02001_006&quot;, &quot;nativeam&quot; = &quot;B02001_004&quot;, # HISPANIC OR LATINO ORIGIN BY SPECIFIC ORIGIN # The number of hispanic individuals needs to be drawn from a different table. &quot;hispanic&quot; = &quot;B03001_003&quot;, #MEDIAN HOUSEHOLD INCOME IN THE PAST 12 MONTHS (IN 2017 INFLATION-ADJUSTED DOLLARS) &quot;income&quot; = &quot;B19013_001&quot;, #HOUSEHOLD INCOME IN THE PAST 12 MONTHS (IN 2017 INFLATION-ADJUSTED DOLLARS) &quot;inc_0010&quot; = &quot;B19001_002&quot;, &quot;inc_1015&quot; = &quot;B19001_003&quot;, &quot;inc_1520&quot; = &quot;B19001_004&quot;, &quot;inc_2025&quot; = &quot;B19001_005&quot;, &quot;inc_2530&quot; = &quot;B19001_006&quot;, &quot;inc_3035&quot; = &quot;B19001_007&quot;, &quot;inc_125&quot; = &quot;B19001_015&quot;, &quot;inc_150&quot; = &quot;B19001_016&quot;, &quot;inc_200&quot; = &quot;B19001_017&quot; ) acs &lt;- get_acs(geography = &quot;block group&quot;, variables = variables, year = 2017, state = &quot;CA&quot;, county = &quot;001&quot;, geometry = TRUE) %&gt;% select(-moe) %&gt;% spread(variable, estimate) %&gt;% mutate(area = as.numeric(st_area(geometry) * 1e-6)) %&gt;% # area is in m^2, change to km^2 transmute( geoid = GEOID, population, households, housing_units, density = households / area, income, # many of the variables come in raw counts, but we want to consider # them as shares of a relevant denominator. lowincome = 100 * (inc_0010 + inc_1015 + inc_1520 + inc_2530 + inc_3035) / households, highincome = 100 * (inc_125 + inc_150 + inc_200) / households, black = 100 * black / population, asian = 100 * asian / population, other = 100 * (nativeam + pacific) / population, white_hisp = 100 - black - asian - other ) # distances computed in py/shortest_paths.py path_files &lt;- dir(&quot;data/shortest_paths/&quot;, full.names = TRUE) distance_df &lt;- lapply(path_files, function(file) { read_csv(file, col_types = list(geoid = col_character(), park_id = col_character())) %&gt;% mutate( yj_distance = VGAM::yeo.johnson(distance, lambda = 0), yj_euc_dist = VGAM::yeo.johnson(euc_dist, lambda = 0) ) }) %&gt;% bind_rows() %&gt;% rename(home = geoid, park = park_id) %&gt;% mutate(home = sprintf(&quot;%012s&quot;, home)) tracts_data_index &lt;- tibble( variable = c(&quot;density&quot;, &quot;income&quot;, &quot;lowincome&quot;, &quot;highincome&quot;, &quot;black&quot;, &quot;asian&quot;, &quot;other&quot;) ) %&gt;% mutate(order = row_number()) acs %&gt;% st_set_geometry(NULL) %&gt;% filter(population &gt; 0) %&gt;% tibble() %&gt;% dplyr::select(tracts_data_index$variable) %&gt;% gather(variable, value) %&gt;% group_by(variable) %&gt;% summarise( `msd` = paste(median_iqr(value, na_rm = TRUE, show_n = &quot;never&quot;, digits = 1)) ) %&gt;% inner_join(tracts_data_index, by = &quot;variable&quot;) %&gt;% arrange(order) %&gt;% mutate( variable = c( &quot;Density: Households per square kilometer&quot;, &quot;Income: Median tract income&quot;, &quot;Low Income: Share of households making less than $35k&quot;, &quot;High Income: Share of households making more than $125k&quot;, &quot;Black: Share of population who is black&quot;, &quot;Asian: Share of population who is Asian&quot;, &quot;Other: Share of population who belong to other minority groups&quot;) ) %&gt;% dplyr::select(-order) %&gt;% knitr::kable(col.names = c(&quot;&quot;, &quot;Median (IQR)&quot;), booktabs = TRUE, digits = 1, caption = &quot;Descriptive Statistics for Residence Block Groups&quot;) Table 3.2: Descriptive Statistics for Residence Block Groups Median (IQR) Density: Households per square kilometer 1,352.9 (880.8, 2,187.0) Income: Median tract income 85,673.0 (58,478.0, 119,375.0) Low Income: Share of households making less than $35k 15.1 (7.8, 26.1) High Income: Share of households making more than $125k 30.4 (15.5, 46.5) Black: Share of population who is black 6.8 (1.8, 18.4) Asian: Share of population who is Asian 21.1 (10.4, 37.8) Other: Share of population who belong to other minority groups 0.5 (0.0, 1.9) 3.2 Model In random utility choice theory, if an individual living in block group \\(n\\) wishes to make a park trip, the probability that the individual will choose park \\(i\\) from the set of all parks \\(J\\) can be described as a ratio of the park’s measurable utility \\(V_{ni}\\) to the sum of the utilities for all parks in the set. In the common destination choice framework we apply a multinomial logit model (McFadden 1974, @Recker1978), \\[\\begin{equation}\\label{eq:p} P_{ni} = \\frac{\\exp(V_{ni})}{\\sum_{j \\in J}\\exp(V_{nj})} \\end{equation}\\] where the measurable utility \\(V_{ni}\\) is a linear-in-parameters function of the destination attributes. \\[\\begin{equation}\\label{eq:V} V_{ni} = X\\beta \\end{equation}\\] where \\(\\beta\\) is a vector of estimable coefficients giving the relative utility (or disutility) of that attribute to the choice maker, all else equal. It is possible to add amenities of the park or the journey to the utility equation. However, as the number of alternatives is large, it is impractical to consider alternative-specific constants or coefficients and therefore not possible to include attributes of the home block group or traveler \\(n\\) directly. We can, however, segment the data and estimate different distance and size parameters for different segments to observe heterogeneity in the utility parameters between different socioeconomic groups. The logarithm of the sum in the denominator of Equation (called the logsum) provides a measure of the consumer surplus of the choice set (Williams 1977), \\[\\begin{equation}\\label{eq:logsum} CS_n = \\ln{{\\sum_{j \\in J}\\exp(V_{nj})}} + C \\end{equation}\\] where \\(C\\) is a constant indicating an unknown absolute value. But comparing the relative logsum values across choice makers, \\(CS_n - CS_{n-1}\\) gives an indication of which choice maker has a more valuable choice set. Or, in this case of a park destination choice model, which choice maker has better access to parks. Such a “utility-based” accessibility term is thus continuously defined, dervied directly from choice theory, and can contain multiple dimensions of the attributes of the choice (Handy and Niemeier 1997; Dong et al. 2006). set.seed(42) n_obs &lt;- 20000 n_alts &lt;- 10 n_flow &lt;- sum(park_flows$flow) ll0e &lt;- sum(n_obs *.8 * log(1/n_alts)) mydata &lt;- park_flows %&gt;% ungroup() %&gt;% mutate(weight = flow / sum(flow)) %&gt;% sample_n(n_obs, replace = TRUE, weight = weight) %&gt;% transmute(id = row_number(), home, alt_0 = park, validation = sample(c(TRUE,FALSE), n(), TRUE, prob = c(0.2, 0.8))) In the most typical cases, researchers estimate the utility coefficients for destination choice models from household travel surveys. As we have no knowledge of an appropriate survey on park access, we need to synthesize a suitable estimation data set. We do this by sampling 210^{4} random discrete device origin-destination pairs from the commercial passive data matrix, weighted by the volume of the flows. This corresponds to a 4.3% sample of all the observed device origin-destination pairs. The sampled origin-destination pair gives the home location as well as the “chosen” alternative for a synthetic person. In principle the individual’s choice set contains all the parks in our dataset; in practice it can be difficult to estimate choice models with so many alternatives (\\(|J| = 500\\)). For this reason we randomly sample 10 additional parks to serve as the non-chosen alternatives for our synthetic choice maker. Such random sampling of alternatives reduces the efficiency of the estimated coefficients but the coefficients remain unbiased (Train 2009). As the model has no alternative-specific constants, the standard likelihood comparison statistic against the market shares model \\(\\rho^2\\) is not computable. We instead use the likelihood comparison against the equal shares model \\(\\rho_0^2\\). sampled_parks &lt;- lapply(1:n_obs, function(i){ sample(attributed_parks$id, n_alts) }) %&gt;% unlist() %&gt;% matrix(ncol = n_alts) %&gt;% as_tibble(.name_repair = ~ str_c(&quot;alt&quot;, 1:n_alts, sep = &quot;_&quot;)) logitdata &lt;- mydata %&gt;% bind_cols(sampled_parks) %&gt;% gather(key = &quot;alt&quot;, value = &quot;park&quot;, -id, -home, -validation) %&gt;% mutate(chosen = alt == &quot;alt_0&quot;) %&gt;% arrange(id, alt) %&gt;% # append distances inner_join(distance_df, by = c(&quot;home&quot;, &quot;park&quot;)) %&gt;% # append park attributes left_join(attributed_parks, by = c(&quot;park&quot; = &quot;id&quot;)) %&gt;% # append block group attributes left_join(acs %&gt;% select(geoid, density:other) %&gt;% st_set_geometry(NULL), by = c(&quot;home&quot; = &quot;geoid&quot;) ) write_rds(logitdata, &quot;data/logitdata.rds&quot;) The resulting analysis dataset therefore contains 210^{4} choice makers that select between 11 parks including the park they were observed to choose; the measured distance between the choice maker’s block group and all parks in the choice set; and the acreage of each park in the choice set. We hold out a random sample of approximately 20% of choice makers for validation purposes. We use the mlogit package for R (Croissant 2019; R Core Team 2020) to estimate the multinomial logit models. References "],
["results.html", " 4 Results 4.1 Model Application", " 4 Results library(tidyverse) library(mlogit) library(modelsummary) library(kableExtra) library(sf) # function to index a tibble for mnl estimation logit_converter &lt;- function(df) { dfidx(df, idx = list(&quot;id&quot;, &quot;alt&quot;), shape = &quot;long&quot;, choice = &quot;chosen&quot;, idnames = &quot;id&quot;, drop.index = FALSE) } # function to estimate the mnl model on a subset of data group_mnl &lt;- function(df){ mlogit(chosen ~ yj_distance + yj_acres + playground + pitch + trail | -1, data = df) } logitdata &lt;- read_rds(&quot;data/logitdata.rds&quot;) dfi &lt;- logit_converter(logitdata) estim &lt;- filter(dfi, validation) valid &lt;- filter(dfi, !validation) We estimated multinomial logit park activity location choice models including coefficients for the distance between the park and the home block group and the acreage of the park. We applied a Yeo-Johnson transformation (Yeo and Johnson 2000) to both distance and acreage; the Yeo-Johnson transformation replicates the constant marginal elasticity of a logarithmic transformation while avoiding undefined values (\\(YJ(0) = 0\\)). For simplicity, we call this transformation log() in the model results tables. Using a constant marginal elasticity is better reflective of how people perceive distances and sizes; a one-mile increase to a trip distance is more impactful to a one-mile trip than a ten-mile trip. base_models &lt;- list( &quot;Network Distance&quot; = mlogit(chosen ~ yj_distance + yj_acres | -1 , data = estim), &quot;Park Attributes&quot; = mlogit(chosen ~ yj_distance + yj_acres + playground + pitch + trail | -1 , data = estim) ) Table 4.1 presents the model estimation results for a series of models. The two models under the “All” heading were estimated on the complete sample of simulated choice makers. minority_models &lt;- estim %&gt;% mutate(group = case_when( black &gt; 30 ~ &quot;black&quot;, asian &gt; 30 ~ &quot;asian&quot;, TRUE ~ &quot;other&quot; )) %&gt;% filter(!is.na(group)) %&gt;% group_by(group) %&gt;% nest() %&gt;% ungroup() %&gt;% mutate( data = map(data, logit_converter), mnl = map(data, group_mnl) ) income_models &lt;- estim %&gt;% mutate(group = case_when(lowincome &gt; 30 ~ &quot;lowincome&quot;, highincome &gt; 50 ~ &quot;highincome&quot;, TRUE ~ &quot;other&quot;)) %&gt;% filter(!is.na(group)) %&gt;% group_by(group) %&gt;% nest() %&gt;% ungroup() %&gt;% mutate( data = map(data, logit_converter), mnl = map(data, group_mnl) ) models &lt;- list( &quot;Distance and Size&quot; = base_models$`Network Distance`, &quot;Park Attributes&quot; = base_models$`Park Attributes`, &quot;&gt; 30% Asian&quot; = minority_models$mnl[[1]], &quot;&gt; 30% Black&quot; = minority_models$mnl[[3]], &quot;Other&quot; = minority_models$mnl[[2]], &quot;&gt; 30% Low income&quot; = income_models$mnl[[1]], &quot;&gt; 50% High income&quot; = income_models$mnl[[3]], &quot;Other&quot; = income_models$mnl[[2]] ) The other models presented in Table 4.1 were estimated on segments of the dataset. These segmentations help to reveal the heterogeneity in choice behavior between individuals of different sociodemographic attributes, in the absence of person-level data. The thresholds are selected to roughly coincide with the quartile values shown in Table 3.2, meaning that approximately one-quarter of the block groups (not weighted by population) will fall within a particular segment. Models under the “Minority” heading include a race-based segmentation: simulated individuals living in block groups with more than thirty percent Black persons are included in the “&gt;30% Black” model, an analogous segmentation for block groups with high Asian populations are in the “&gt;30% Asian” model, and the “Other” model contains all other block groups. Another set of model segmentation relies on the share of the population in each block group with household incomes above or below certain thresholds. Again, we use the threshold definitions presented in 3.2 modelsummary( models, stars = TRUE, output = &quot;kableExtra&quot;, coef_map = c( &quot;yj_distance&quot; = &quot;log(Distance)&quot;, &quot;yj_acres&quot; = &quot;log(Acres)&quot;, &quot;playgroundTRUE&quot; = &quot;Playground&quot;, &quot;pitchTRUE&quot; = &quot;Sport Field&quot;, &quot;trailTRUE&quot; = &quot;Trail&quot; ), gof_omit = &quot;BIC&quot;, title = &quot;Estimated Model Coefficients&quot; ) %&gt;% add_header_above(c(&quot; &quot; = 1, &quot;All&quot; = 2, &quot;Minority&quot; = 3, &quot;Income&quot; = 3)) Table 4.1: Estimated Model Coefficients All Minority Income Distance and Size Park Attributes &gt; 30% Asian &gt; 30% Black Other &gt; 30% Low income &gt; 50% High income Other log(Distance) -1.365*** -1.421*** -1.364*** -1.620*** -1.399*** -1.470*** -1.329*** -1.423*** (0.022) (0.023) (0.039) (0.065) (0.032) (0.053) (0.051) (0.029) log(Acres) 0.410*** 0.349*** 0.405*** 0.296*** 0.322*** 0.295*** 0.391*** 0.355*** (0.011) (0.011) (0.019) (0.031) (0.016) (0.026) (0.027) (0.015) Playground -0.484*** -0.396*** -0.211* -0.647*** -0.404*** -0.580*** -0.491*** (0.050) (0.084) (0.122) (0.072) (0.106) (0.123) (0.063) Sport Field -0.300*** -0.181** -0.682*** -0.263*** -0.637*** 0.040 -0.283*** (0.050) (0.083) (0.130) (0.072) (0.114) (0.118) (0.064) Trail 0.631*** 0.771*** 0.325*** 0.690*** 0.435*** 0.857*** 0.673*** (0.052) (0.093) (0.125) (0.075) (0.109) (0.146) (0.066) Num.Obs. 3971 3971 1379 593 1999 777 758 2436 AIC 11676.4 11346.9 3955.0 1735.9 5597.2 2357.4 1941.7 7021.3 Log.Lik. -5836.201 -5668.447 -1972.504 -862.954 -2793.578 -1173.685 -965.844 -3505.653 rho2 rho20 0.387 0.405 0.403 0.393 0.417 0.370 0.469 0.400 * p &lt; 0.1, ** p &lt; 0.05, *** p &lt; 0.01 4.1 Model Application References "],
["final-words.html", " 5 Final Words", " 5 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
